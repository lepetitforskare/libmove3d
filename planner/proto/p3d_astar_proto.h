/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.

 */
#ifndef __CEXTRACT__

extern int p3d_graph_search ( p3d_graph *graph, double (*fct_heurist)(p3d_node *, p3d_node *, p3d_graph *), int (*fct_valid)(p3d_node *, p3d_edge *, p3d_graph *), int (*fct_end)(p3d_node *, p3d_node *) );
extern int p3d_OrderingGraphSearch(
  p3d_graph *graph, 
  double (*fct_heurist)(p3d_node *, p3d_node *, p3d_graph *),
  int (*fct_valid)(p3d_node *, p3d_edge *, p3d_graph *),
  int (*fct_end)(p3d_node *, p3d_node *));
extern int p3d_valid ( p3d_node * nodePt, p3d_edge * edgePt, p3d_graph * graphPt );
extern int p3d_valid_multisol(p3d_node * nodePt, p3d_edge * edgePt, p3d_graph * graphPt);
extern int p3d_end ( p3d_node *n1, p3d_node *n2 );
extern double p3d_heurist ( p3d_node *n1, p3d_node *n2, p3d_graph *G );

//start path deform
extern int p3d_graph_many_search(p3d_graph* graph, 
				 double(*fct_heurist)(p3d_node*, p3d_node*, p3d_graph*),
				 int(*fct_valid)(p3d_node*, p3d_edge*, p3d_graph*),
				 int (*fct_end)(p3d_node *, p3d_node *), 
				 p3d_traj* traj);

extern int p3d_graph_new_search(p3d_graph *graph, 
				double (*fct_heurist)(p3d_node*, p3d_node*, p3d_graph*),
				int (*fct_valid)(p3d_node *, p3d_edge *, p3d_graph *), 
				int (*fct_end)(p3d_node *, p3d_node *));
extern p3d_path_nodes*  p3d_allocinit_path_nodes(void);
extern void p3d_destroy_path_nodes(p3d_path_nodes* path_nodes);
extern int IsNodeInPath(p3d_node* nestNodePt, p3d_node* N);

//end path deform
#endif /* __CEXTRACT__ */
