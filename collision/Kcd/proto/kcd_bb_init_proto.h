/*
 * Copyright (c) 2001-2014 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of  source  code must retain the  above copyright
 *      notice and this list of conditions.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice and  this list of  conditions in the  documentation and/or
 *      other materials provided with the distribution.
 *
 * THE SOFTWARE  IS PROVIDED "AS IS"  AND THE AUTHOR  DISCLAIMS ALL WARRANTIES
 * WITH  REGARD   TO  THIS  SOFTWARE  INCLUDING  ALL   IMPLIED  WARRANTIES  OF
 * MERCHANTABILITY AND  FITNESS.  IN NO EVENT  SHALL THE AUTHOR  BE LIABLE FOR
 * ANY  SPECIAL, DIRECT,  INDIRECT, OR  CONSEQUENTIAL DAMAGES  OR  ANY DAMAGES
 * WHATSOEVER  RESULTING FROM  LOSS OF  USE, DATA  OR PROFITS,  WHETHER  IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR  OTHER TORTIOUS ACTION, ARISING OUT OF OR
 * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.                                  
 *
 * Sim√©on, T., Laumond, J. P., & Lamiraux, F. (2001). 
 * Move3d: A generic platform for path planning. In in 4th Int. Symp.
 * on Assembly and Task Planning.
 */
/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.

 */
#ifndef __CEXTRACT__

extern int get_nr_on_pile ( void );
extern void print_bb ( kcd_bb_p abox );
extern void print_bb_boxes ( void );
extern void init_kcd_obb ( void );
extern void kcd_clean_up_kcd_type_obbs ( void );
extern int add_flat_obb ( int m3d_poly_it_id, int obb_type, int obb_ref_num );
extern int add_spherical_obb ( int m3d_poly_it_id, int obb_type, int obb_ref_num );
extern int add_tall_obb ( int m3d_poly_it_id, int obb_type, int obb_ref_num );
extern void clean_up_kcd_obb ( void );
extern int put_obb_away ( int volume_is_too_small, double box_1, double box_2, double box_3, kcd_vector3 center, kcd_vector3 directions[3], void *m3d_poly_it, int ext_p_id, int ext_obj_id, int nof_the_vertices, int *the_vertices, int OBB_SHAPE, int leaf_value, int is_robot, int IS_OBB_ROOT );
extern int put_new_aabb_away ( int ext_obj_id, int is_aabb_tree_leaf, double x1, double x2, double y1, double y2, double z1, double z2, int *the_aabb_group, int the_aabb_group_nofels, int hierheight );
extern void put_aabb_away ( int obb_nr, double x1, double x2, double y1, double y2, double z1, double z2, int is_leaf );

#endif /* __CEXTRACT__ */
