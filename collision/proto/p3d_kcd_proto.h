/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.

 */
#ifndef __CEXTRACT__

extern void p3d_kcd_set_object_moved ( int o_id, int is_moved );
extern void add_p3d_kcd_env ( int tot_nof_objs, int p3d_env_id, int kcd_scene_id );
extern void deconnect_p3d_kcd_global_vars ( void );
extern void connect_p3d_kcd_global_vars ( int kcd_scene_id );
extern void clean_up_p3d_kcd_env_arr ( void );
extern pp3d_obj get_obj_ptr_from_o_id ( int mo_o_id );
extern void p3d_kcd_get_pairObjInCollision ( p3d_obj **o1Pt, p3d_obj **o2Pt );
extern void p3d_get_mo_pos ( int ext_o_id, p3d_matrix4 **pos );
extern int p3d_get_aabb_on_mo ( int kcd_ext_o, double *x1, double *x2, double *y1, double *y2, double *z1, double *z2 );
extern int get_kcd_id_from_object(p3d_obj* o, bool& movable);
extern int get_kcd_id_from_input_index ( int input_index, int *is_movable );
extern int get_p3d_id_from_input_index ( int input_index );
extern void kcd_obb_construct ( int nof_graphic_obst );
extern int p3d_kcd_test_self_collision ( int robot_number, int with_report );
extern int p3d_kcd_test_robot_statics ( p3d_rob *robotPt, int with_report );
extern int p3d_kcd_test_robot_other ( p3d_rob *robotPt1, p3d_rob *robotPt2, int with_report );
extern int p3d_kcd_collision_test ( void );
extern int p3d_kcd_collision_test_all ( void );
extern int p3d_kcd_test_everything ( int kcd_with_report );
extern int p3d_kcd_collision_test_and_distance_estimate ( double *min_distance_estimate );
extern void p3d_kcd_set_pos ( p3d_poly *p, p3d_matrix4 mat );
extern void p3d_start_kcd ( void );
extern void p3d_kcd_stop ( void );
extern void kcd_add_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void kcd_deact_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void kcd_add_collision_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void kcd_deact_collision_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void kcd_add_distance_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void kcd_deact_distance_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern void p3d_kcd_activate_obstacle ( p3d_obj *obstaclePt );
extern void p3d_kcd_deactivate_obstacle ( p3d_obj *obstaclePt );
extern void kcd_add_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_deact_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_add_collision_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_deact_collision_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_add_distance_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_deact_distance_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern void kcd_add_collision_robot_pair ( kcd_col_handle * handlePt, p3d_rob * rob1, p3d_rob * rob2 );
extern void kcd_deact_collision_robot_pair ( kcd_col_handle * handlePt, p3d_rob * rob1, p3d_rob * rob2 );
extern void kcd_add_collision_robot_to_env ( kcd_col_handle * handlePt, p3d_rob * rob );
extern void kcd_deact_collision_robot_to_env ( kcd_col_handle * handlePt, p3d_rob * rob );
extern void kcd_deactivate_all ( kcd_col_handle * handlePt );
extern int kcd_is_collision_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern int kcd_is_distance_pair_of_objects ( kcd_col_handle * handlePt, p3d_obj *body1, p3d_obj *body2 );
extern int kcd_is_collision_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern int kcd_is_distance_object_to_env ( kcd_col_handle * handlePt, p3d_obj *body );
extern int kcd_is_collision_robot_pair ( kcd_col_handle * handlePt, p3d_rob *rob1, p3d_rob *rob2 );
extern int kcd_is_collision_robot_to_env ( kcd_col_handle * handlePt, p3d_rob *rob );
extern int p3d_kcd_get_cor_mo ( int o_id );
extern void p3d_kcd_closest_points_between_bodies ( p3d_rob *robotPt, p3d_vector3 *points_mos1, p3d_vector3 *points_mos2, double *distances );
extern void p3d_kcd_closest_points_robot_environment ( p3d_rob *robotPt, p3d_vector3 *points_mos, p3d_vector3 *points_sos, double *distances );
extern void p3d_kcd_closest_points_of_both ( p3d_rob *robotPt, p3d_vector3 *points_mos, p3d_vector3 *points_sos, double *distances );
extern void kcd_get_dist_for_bodies ( int robot_id, double *distances );
extern void kcd_get_dist_report_obst ( int robot_id, double *distances );
extern void kcd_get_dist_report_both ( int robot_id, double *distances );
extern void p3d_kcd_closest_points_mo_environment ( p3d_obj *mobjPt, p3d_vector3 point_mo, p3d_vector3 point_so, double *distance );
extern void p3d_kcd_closest_points_mo_of_both ( p3d_obj *mobjPt, p3d_vector3 point_mo, p3d_vector3 point_o, double *distance );
extern int kcd_add_obstacle ( p3d_obj *obst );
extern int kcd_add_obstacle_list ( p3d_obj **obstList, int nof_obsts );
extern void kcd_print_colliding_pair();

#endif /* __CEXTRACT__ */
