/*
 * Copyright (c) 2001-2014 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of  source  code must retain the  above copyright
 *      notice and this list of conditions.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice and  this list of  conditions in the  documentation and/or
 *      other materials provided with the distribution.
 *
 * THE SOFTWARE  IS PROVIDED "AS IS"  AND THE AUTHOR  DISCLAIMS ALL WARRANTIES
 * WITH  REGARD   TO  THIS  SOFTWARE  INCLUDING  ALL   IMPLIED  WARRANTIES  OF
 * MERCHANTABILITY AND  FITNESS.  IN NO EVENT  SHALL THE AUTHOR  BE LIABLE FOR
 * ANY  SPECIAL, DIRECT,  INDIRECT, OR  CONSEQUENTIAL DAMAGES  OR  ANY DAMAGES
 * WHATSOEVER  RESULTING FROM  LOSS OF  USE, DATA  OR PROFITS,  WHETHER  IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR  OTHER TORTIOUS ACTION, ARISING OUT OF OR
 * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.                                  
 *
 * Sim√©on, T., Laumond, J. P., & Lamiraux, F. (2001). 
 * Move3d: A generic platform for path planning. In in 4th Int. Symp.
 * on Assembly and Task Planning.
 */
/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.

 */
#ifndef __CEXTRACT__

extern int p3d_del_desc ( int type );
extern int p3d_del_traj ( pp3d_traj trajPt );
extern int p3d_del_obst ( pp3d_obj o );
extern void delete_config ( pp3d_rob r, config_namePt config );
extern int p3d_del_config ( pp3d_rob robotPt, config_namePt config );
extern int p3d_del_rob ( pp3d_rob r );
extern int p3d_del_env ( pp3d_env e );
extern void create_comp ( p3d_node *Ns, p3d_node *N, p3d_graph *G );
extern void recreate_comp ( p3d_node *Ns, p3d_node *N, p3d_compco *comp, p3d_graph *G );
extern void split_comp ( p3d_graph *G, p3d_compco *comp, p3d_node *N );
extern void p3d_del_node ( p3d_node *N, p3d_graph *G );
extern void destroy_length_array ( pp3d_rob r );
#ifdef MULTIGRAPH
extern void p3d_del_multiGraph(p3d_rob* robot, p3d_multiGraph * mg);
#endif
#endif /* __CEXTRACT__ */
