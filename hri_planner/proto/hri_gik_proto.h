/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Tue May 27 14:48:29 2008
 */
#ifndef __CEXTRACT__

extern hri_gik * hri_gik_create_gik ( void );
extern hri_gik_task * hri_gik_create_task ( void );
extern int hri_gik_destroy_gik_data ( hri_gik * gik );
extern int hri_gik_initialize_gik ( hri_gik * gik, p3d_rob * robot, int direct, int total_joint_no );
extern int hri_gik_add_task ( hri_gik * gik, int m, int n, int priority, int * jindexes, int eef_no );
extern int hri_gik_initialize_task ( hri_gik * gik, hri_gik_task * task, int m, int n, int priority, int * jindexes, int eef_no );
extern int hri_gik_destroy_task ( hri_gik_task * task );
extern int hri_gik_destroy_gik ( hri_gik * gik );
extern int hri_gik_computeJacobian ( hri_gik * gik, int task_no, int rotation );
extern int hri_gik_computePsInvJacobian ( hri_gik * gik, int task_no );
extern void hri_gik_ShowTheMatrix ( gsl_matrix * M );
extern void hri_gik_ShowTheVector ( gsl_vector * V );
extern int hri_gik_computePJ ( hri_gik * gik, int task_no );
extern int hri_gik_take_goal ( hri_gik * gik, int task_no );
extern int hri_gik_computeDeltaAlpha ( hri_gik * gik, double force, int task_no );
extern int hri_gik_updaterobot ( hri_gik * gik, gsl_vector * DT );
extern configPt hri_gik_update_core_result ( hri_gik * gik );
extern int hri_gik_compute_DX ( hri_gik * gik, int task_no );
extern int hri_gik_compute_core ( hri_gik * gik, double force, gsl_vector * DT_final );
extern int hri_gik_free_joints ( hri_gik * gik );
extern int hri_gik_compute ( p3d_rob * robot, hri_gik * gik, int step, double reach, int direct, double force, p3d_vector3* goalCoord, p3d_vector3* goalOrient, configPt * qresult, int (*fct)(void) );
extern int hri_gik_computestep ( p3d_rob * robot, hri_gik * gik, int step, double force );
extern int hri_gik_computestepWoP ( p3d_rob * robot, hri_gik * gik, int step, int direct, double force );
extern int hri_gik_computestepPer ( p3d_rob * robot, hri_gik * gik, int step, double force );
extern double hri_gik_remainingdistance ( hri_gik * gik, int task_no );
extern void g3d_draw_cameratargetline ( void );

#endif /* __CEXTRACT__ */
