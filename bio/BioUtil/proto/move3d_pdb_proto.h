/*
 * Copyright (c) 2001-2014 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of  source  code must retain the  above copyright
 *      notice and this list of conditions.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice and  this list of  conditions in the  documentation and/or
 *      other materials provided with the distribution.
 *
 * THE SOFTWARE  IS PROVIDED "AS IS"  AND THE AUTHOR  DISCLAIMS ALL WARRANTIES
 * WITH  REGARD   TO  THIS  SOFTWARE  INCLUDING  ALL   IMPLIED  WARRANTIES  OF
 * MERCHANTABILITY AND  FITNESS.  IN NO EVENT  SHALL THE AUTHOR  BE LIABLE FOR
 * ANY  SPECIAL, DIRECT,  INDIRECT, OR  CONSEQUENTIAL DAMAGES  OR  ANY DAMAGES
 * WHATSOEVER  RESULTING FROM  LOSS OF  USE, DATA  OR PROFITS,  WHETHER  IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR  OTHER TORTIOUS ACTION, ARISING OUT OF OR
 * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.                                  
 *
 * Sim√©on, T., Laumond, J. P., & Lamiraux, F. (2001). 
 * Move3d: A generic platform for path planning. In in 4th Int. Symp.
 * on Assembly and Task Planning.
 */
/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.

 */
#ifndef __CEXTRACT__

typedef enum {
 trajExpMinNONE = 0, trajExpMinAMBERSaveFromM3D = 1, trajExpMinAMBERSaveFromAmber = 2, trajExpMinRRT = 3
} trajExportMinimizationType;


//extern void readamino ( char *s );
//extern void intable ( p3d_poly *polygordo );
extern void common_infile ( FILE *fp );
extern void write_atom ( FILE *fp, int i );
extern void ILE_infile ( FILE *fp );
extern void infile ( FILE *fp );
//extern void move3d_to_pdb ( pp3d_rob protein, char *filename );
extern int traj_to_pdb ( p3d_rob *robotPt, double dmax, char *radix );
extern int graph_to_pdb ( void );
extern int traj_counter ( p3d_rob *robotPt, double dmax );
extern void serchDmaxAndWrite ( pp3d_rob protein, char *radix, int desired );
extern void translate_conf_to_pdb(pp3d_rob protein, FILE *fp);
extern int bio_write_pdbs_unifom_dep(pp3d_rob robotPt, char *radix, double dep_dist, trajExportMinimizationType minimizationType);
extern int bio_write_pdbs_of_N_in_path(pp3d_rob robotPt, char *radix, trajExportMinimizationType minimizationType);
extern void bio_write_baryplot(void);

#endif /* __CEXTRACT__ */
