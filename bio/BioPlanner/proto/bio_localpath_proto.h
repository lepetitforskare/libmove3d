/*
 * Copyright (c) 2001-2014 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of  source  code must retain the  above copyright
 *      notice and this list of conditions.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice and  this list of  conditions in the  documentation and/or
 *      other materials provided with the distribution.
 *
 * THE SOFTWARE  IS PROVIDED "AS IS"  AND THE AUTHOR  DISCLAIMS ALL WARRANTIES
 * WITH  REGARD   TO  THIS  SOFTWARE  INCLUDING  ALL   IMPLIED  WARRANTIES  OF
 * MERCHANTABILITY AND  FITNESS.  IN NO EVENT  SHALL THE AUTHOR  BE LIABLE FOR
 * ANY  SPECIAL, DIRECT,  INDIRECT, OR  CONSEQUENTIAL DAMAGES  OR  ANY DAMAGES
 * WHATSOEVER  RESULTING FROM  LOSS OF  USE, DATA  OR PROFITS,  WHETHER  IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR  OTHER TORTIOUS ACTION, ARISING OUT OF OR
 * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.                                  
 *
 * Sim√©on, T., Laumond, J. P., & Lamiraux, F. (2001). 
 * Move3d: A generic platform for path planning. In in 4th Int. Symp.
 * on Assembly and Task Planning.
 */
/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 *
 *   Created: Wed Jun 23 14:30:20 2004
 */
#ifndef __CEXTRACT__

extern void bio_col_set_step_deplacement(double deplacement);
extern void bio_col_get_step_deplacement(double *deplacement);

extern double bio_compute_localpath_validation_const_step(p3d_rob *robotPt,
							  p3d_localpath *localpathPt,
							  double maxdep);

extern int bio_col_test_localpath_step ( p3d_rob *robotPt, p3d_localpath *localpathPt, int *ntest, double *Kpath, configPt *q_atKpath );

extern void bio_evaluate_traj(FILE *contacts_file);

extern void bio_reset_current_q_inv(p3d_rob *robotPt);

extern void bio_set_current_q_inv(p3d_rob *robotPt, p3d_localpath *localpathPt, configPt q_inv); 
extern int bio_get_current_q_inv(p3d_rob *robotPt, configPt q_invPt);


/**
 * isBioTrajInCol
 * Function testing the validity of a trajectory in a bio environment
 * TODO.
 * Note: the incremental step is based on the viual step in draw traj.
 * ie: p3d_get_env_graphic_dmax();
 */
extern int isBioTrajInCol(p3d_rob* robotPt, p3d_traj* trajPt, 
			  int* nTestPt);

#endif /* __CEXTRACT__ */
