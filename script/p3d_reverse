#!/usr/local/bin/perl  -- -*-perl-*-

#---------------------------------------------------------------
#  Inversion de toutes les facettes
#---------------------------------------------------------------

##
##  Expressions regulieres
##

$number = '[-+]?\.?\d+\.?\d*[eE]?[-+]?\d*';
$name = '[\w\.\_\-\+\%]+';
$move3d_file = '[\w\_\-]+\.[pP]3[dD]';
$macro_file = '[\w\_\-]+\.macro';

##
##  PARAMETRES
##

if ($#ARGV != 1) {
  print "\nReverse the faces of a 3D model\n";
  die "Usage:\treverse <filein> <fileout>\n\n";
}

$inputfile = $ARGV[0];
$outputfile = $ARGV[1];

$_ = $inputfile;
if(/$move3d_file|$macro_file/) {
  open(INPUT, $inputfile) or die "\nCannot open input file $inputfile\n";
} else {
  die "\nCannot open input file $inputfile\nFomat supported: .p3d & .macro\n";
}

$_ = $outputfile;
if(/$move3d_file|$macro_file/) {
  open(OUTPUT, ">".$outputfile) or die "\nCannot create output file $outputfile\n";
} else {
  close(INPUT);
  die "\nCannot create output file $outputfile\nFomat supported: .p3d & .macro\n";
}

print "\nReverse processing...\n";

##
##  REVERSE
##

$compteur = 0;
while(<INPUT>){

  # p3d_add_desc_face  
  if (/^(\s*p3d_add_desc_face)\s+(.+)$/) {
    local(@face) = ();
    local($instruction) = $1;
    $_ = $2;
    while(/^\s*($number)(.*)$/) {
      push(@face,$1);
      $_ = $2;
    }
    print OUTPUT "$instruction";
    for($i=$#face;$i>=0;$i--) {
      print OUTPUT " $face[$i]";
    }
    print OUTPUT "\n";
    $compteur++;
  } else {
    print OUTPUT "$_";
  }
}

print "Number of lines changed: $compteur\n\n";

close(OUTPUT);
close(INPUT);

