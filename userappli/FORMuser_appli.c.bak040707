#include "P3d-pkg.h"
#include "Move3d-pkg.h"
#include "Graphic-pkg.h"
#include "UserAppli-pkg.h"
#include "Planner-pkg.h"
/*
static void CB_sampling_obj(FL_OBJECT *ob, long arg);
static void CB_random_qinit_qgoal_obj(FL_OBJECT *ob, long arg);
static void CB_reload_conf_obj(FL_OBJECT *ob, long arg);
static void CB_single_shoot_obj(FL_OBJECT *ob, long arg);
static void CB_check_config(FL_OBJECT *ob, long arg);*/
FL_FORM *USER_APPLI_FORM = NULL;
static void CB_compute_tests_obj(FL_OBJECT *ob, long arg);
static int CB_userAppliForm_OnClose(FL_FORM *form, void *arg);
/*******************************************/
/*
static FL_OBJECT  *user_obj;
       FL_OBJECT  *STRAT1_OBJ;
       FL_OBJECT  *STRAT2_OBJ;
       FL_OBJECT  *STRAT3_OBJ;

static FL_OBJECT  *GROUP1;
static FL_OBJECT  *GENE_RANDOM_CONF;
static FL_OBJECT  *RELOAD_CONF;*/
static FL_OBJECT  *COMPUTE_TESTS;
extern FL_OBJECT  *user_obj;
/*static FL_OBJECT  *SINGLE_SHOOT;
static FL_OBJECT  *PRINT_CONFIG;
//show graph config
static FL_OBJECT  *INPUT_OBJ; //input text
static FL_OBJECT  *PREV_OBJ; //previous conf
static FL_OBJECT  *NEXT_OBJ; //next conf

extern int p3d_standard_shoot(p3d_rob *robotPt, configPt q);
*/
void g3d_create_user_appli_form(void){
  g3d_create_form(&USER_APPLI_FORM, 300, 300, FL_UP_BOX);
  g3d_create_button(&COMPUTE_TESTS,FL_NORMAL_BUTTON,49.0,30.0,"Compute tests",(void*)&USER_APPLI_FORM,1);
  fl_set_call_back(COMPUTE_TESTS,CB_compute_tests_obj,0);
  fl_end_form();
  fl_set_form_atclose(USER_APPLI_FORM, CB_userAppliForm_OnClose, 0);
}
  /*  FL_OBJECT *obj;
  g3d_create_form(&USER_APPLI_FORM, 300, 300, FL_UP_BOX);*/
/*  USER_APPLI_FORM = fl_bgn_form(FL_UP_BOX,300.0,300.0);
  init_qinit_qgoal();
  obj = fl_add_labelframe(FL_ENGRAVED_FRAME,20,20,260,30,"Sampling Strategy");

  GROUP1 = fl_bgn_group();
  STRAT1_OBJ = fl_add_checkbutton(FL_RADIO_BUTTON,35,20,70,30,"Bridge");
  fl_set_object_color(STRAT1_OBJ,FL_MCOL,FL_GREEN);
  fl_set_call_back(STRAT1_OBJ,CB_sampling_obj,4);
  STRAT2_OBJ = fl_add_checkbutton(FL_RADIO_BUTTON,105,20,50,30,"Obprm");
  fl_set_object_color(STRAT2_OBJ,FL_MCOL,FL_GREEN);
  fl_set_call_back(STRAT2_OBJ,CB_sampling_obj,5);
  STRAT3_OBJ = fl_add_checkbutton(FL_RADIO_BUTTON,175,20,50,30,"visBrid");
  fl_set_object_color(STRAT3_OBJ,FL_MCOL,FL_GREEN);
  fl_set_call_back(STRAT3_OBJ,CB_sampling_obj,6);

  GROUP1 = fl_end_group();
  fl_set_button(STRAT1_OBJ,1);

  GENE_RANDOM_CONF = fl_add_button(FL_NORMAL_BUTTON,
		      20,55.0,80.0,30.0,
			      "Random config");
  fl_set_call_back(GENE_RANDOM_CONF,CB_random_qinit_qgoal_obj,0);
  RELOAD_CONF = fl_add_button(FL_NORMAL_BUTTON,
                              110,55.0,80.0,30.0,
                              "Reload config");
  fl_set_call_back(RELOAD_CONF,CB_reload_conf_obj,0);
  SINGLE_SHOOT = fl_add_button(FL_NORMAL_BUTTON,
                                20,90.0,80.0,30.0,
                                "Single shoot");
  fl_set_call_back(SINGLE_SHOOT,CB_single_shoot_obj,0);

  fl_set_button(STRAT1_OBJ,1);
  
  
  PREV_OBJ = fl_add_button(FL_NORMAL_BUTTON,115,95,30,20,"<<");
  fl_set_call_back(PREV_OBJ,CB_check_config,0);
  NEXT_OBJ = fl_add_button(FL_NORMAL_BUTTON,195,95,30,20,">>");
  fl_set_call_back(NEXT_OBJ,CB_check_config,1);
  INPUT_OBJ  = fl_add_input(FL_NORMAL_INPUT,150.0,95.0,40.0,20.0,"");
  fl_set_object_callback(INPUT_OBJ,CB_check_config,2);
  
  
  
  printf ("create user appli form");*/
/* fl_end_form();
}
*/
void g3d_delete_user_appli_form(void)
{
  g3d_fl_free_object(COMPUTE_TESTS);
  fl_free_form(USER_APPLI_FORM);
}

/****************************************************************************/
/** \brief This function is called when the "User appli" window is closed from the X button
  If we do not use this call back, XForms tries to close the entire application
    and we do not want that. Instead we will just click on the Cancel button
 \param *form a pointer on the FL_FORM
 \param *arg argument for the call back function (not used)
 \return FL_IGNORE.
 */
/****************************************************************************/
static int CB_userAppliForm_OnClose(FL_FORM *form, void *arg)
{
  //Call the fonction closing the form.
  g3d_delete_user_appli_form();
  fl_set_button(user_obj,0);//release the button path_Deformation on planner FORM
  //If we return FL_OK, the application will continue to try to shut down itself
  //   if however we return FL_IGNORE, the application will not continue this event
  return FL_IGNORE;
}

static void CB_compute_tests_obj(FL_OBJECT *ob, long arg){
  p3d_compute_tests();
}
/*
static void CB_sampling_obj(FL_OBJECT *ob, long arg)
{
  if(arg == 4){
    p3d_set_RANDOM_CHOICE(P3D_RANDOM_SAMPLING);
    p3d_set_SAMPLING_CHOICE(P3D_BRIDGE_SAMPLING);
  }
  if(arg == 5){
    p3d_set_RANDOM_CHOICE(P3D_RANDOM_SAMPLING);
    p3d_set_SAMPLING_CHOICE(P3D_OBPRM_SAMPLING);
  }
} 

static void CB_check_config(FL_OBJECT *ob, long arg)
{
  pp3d_rob r = (pp3d_rob)p3d_get_desc_curid(P3D_ROBOT);
  pp3d_graph g= r->GRAPH;
  if(g){
    if(arg == 0){
      p3d_previous_node(r,g,INPUT_OBJ);
    }
    if(arg == 1){
      p3d_next_node(r,g,INPUT_OBJ);
    }
    if(arg == 2){
      p3d_draw_current_node(r,g,atoi(fl_get_input(INPUT_OBJ)));
    }
  }else{
    printf("il n'y a pas de graph");
  }
}


static void CB_random_qinit_qgoal_obj(FL_OBJECT *ob, long arg)
{
  p3d_random_qinit_qgoal();
}

static void CB_reload_conf_obj(FL_OBJECT *ob, long arg)
{
  p3d_reload_conf();
}

static void CB_single_shoot_obj(FL_OBJECT *ob, long arg){
  p3d_single_shoot();
}*/
